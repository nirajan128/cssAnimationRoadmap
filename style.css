
*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body{
    margin-right: 2em;
    margin-left: 2em;  
    background-color: #d3d3d3; 
}

h1{
    text-align: center;
    padding: 0.5em;
    font-family: "Montserrat", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}

p{
    font-family: "Open Sans", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}

.transition p{
    padding: 1em;
    height: 100%;
    text-align: start;
}

footer{
    text-align: center;
    margin-top: 1em;
}
/* Transition */
.explain_transition, .explainAnimation{
    display: grid;
    grid-template-columns: repeat(3,1fr);
    gap: 1.5em;
    padding: 1em;
}


.box{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    align-items: center;
    height: 100%;
    text-align: center;
    box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.26);
    background-color: #EDEADE;
}



/* Transition should be defined on parent element */
/* transition : diffrerent tanstion time for different properties */
.button {
    background-color: #04AA6D; /* Green */
    border: none;
    color: white;
    padding: 16px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
    height: 3em;
    width: 9em;
    border: none;
  }


.btransition{
    background-color: white;
    border: 1px solid brown;
    color: brown;
    transition: color 2s, font-size 1s; /* fifferent transition timig for different properties */
}

.btransition:hover{
    color: white;
    background-color: brown;
    font-size: 18px;
}


.btransition2{
    background-color: brown;
    transition: all 0.5s; /* same timeing for all transition */
}

.btransition2:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
}


.btransition3{
    background-color: brown;
    transition: all 0.2s;
    transition-delay: 1s; /* Transition delay on 1s */
 
}

.btransition3:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
}


.btransition4{
    background-color: brown;
    transition: all 0.5s;
    transition-property: width;
    transition-duration: 0.5s; /* Transition delay on 1s */
 
}

.btransition4:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 10em;
}


.btransition5{
    background-color: brown;
    transition-property: width;
    transition-duration: 1s;
    transition-timing-function: ease; /* trasnsition timing functions slow start than fast than slow end */
 
}

.btransition5:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 11em;
}


.btransition6{
    background-color: brown;
    transition-property: width;
    transition-duration: 0.5s;
    transition-timing-function: linear; /* trasnsition timing functions same speed from start to end */
 
}

.btransition6:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 11em;
}


.btransition7{
    background-color: brown;
    transition-property: width;
    transition-duration: 0.5s;
    transition-timing-function: ease-in; /* trasnsition timing functions slow start*/
 
}
.btransition7:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 11em;
}



.btransition8{
    background-color: brown;
    transition-property: width;
    transition-duration: 0.5s;
    transition-timing-function: ease-out; /* trasnsition timing functions slow end*/
    width: 11em;
 
}
.btransition8:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 13em;
}


.btransition9{
    background-color: brown;
    transition-property: width;
    transition-duration: 0.5s;
    transition-timing-function: ease-in-out; /* trasnsition timing functions slow start and end */
    width: 11em;
 
}

.btransition9:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 13em;
}

.btransition10{
    background-color: brown;
    transition: width 0.5s ease-in-out 0.7s;
}

.btransition10:hover{
    color: brown;
    background-color: white;
    border: 1px solid brown;
    width: 13em;
}

/*animation  */
.animation{
    padding: 2em;
}

.twoProperty{
    display: flex;
    gap: 1em;
    
}

.twoProperty> div{
    margin-top: 1em;
    padding: 1em;
    display: flex;
    gap: 10px;
    box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.26);
    background-color: #EDEADE;
    
}

.p_title{
    background-color: brown;
    display: flex;
    align-items: center;
}
.p_title h3{
    text-align: start;
    padding: 1em;
}

.p_box{
    width: 50%;
    background-color: white;

}

.animationProperty{
    display: grid;
    grid-template-columns: repeat(4,1fr);
    gap: 1em;
}
.animationProperty>div{
    padding: 1em;
    box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.26);
    margin-top: 1em;
    background-color: #EDEADE;
}

.abox{
    display: flex;
    box-shadow: 10px 10px 36px 0px rgba(0, 0, 0, 0.26);
    padding: 1em;
    flex-direction:column;
}
.anibox{
    width: 80px;
    height:100px;
    background-color: brown;
    padding:1em;
    opacity: 90%;
}
.content{
    margin-top: 1em;
    background-color: #EDEADE;
}

.explainAnimation >div{
    background-color: #EDEADE;
}
/* Animation applied to elements */
.a1{
    animation-name: grow;
    animation-duration: 2s;
}

.a2{
    animation: toCircle;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: ease-in;
}

.a3{
    animation: growShrink 3s ease-in none infinite alternate ;
}


@keyframes grow{
    from{width: 80px; height: 100px;}
    to{width: 320px; opacity: 100%; background-color: rebeccapurple;}
}

@keyframes toCircle {
    20%{border: 2px solid black; }
    50%{border-radius: 50%;}
    55%{background-color: burlywood;}
    80%{background-color: brown; }
    100%{border-radius: 100%;}

}

@keyframes growShrink {
    0%{width: 80px; height: 100px;}
    35%{width: 200px; height: 110px; background-color: rebeccapurple;}
    70%{width: 110px; height: 100px; border-radius: 50%;}
    100%{width: 80px; height: 100px; border-radius: 0; background-color: brown;}

}


/* Translate */
.translate{
    display: grid;
    grid-template-columns: repeat(3,1fr);
    gap: 1em;
}
.translate>div{
    box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.26);
    width: 100%;
    background-color: #EDEADE;
}

.t_box{
    height: 200px;
    padding: 1em;
    display: flex;
    gap: 1em;
}

.t-content{
    
    box-shadow: 10px 10px 36px 0px rgba(0,0,0,0.26);
   
}

.t-content p{
    padding: 1em;
}
.t-element{
    width: 80%;
}

.translate-box{
    width: 70px;
    height: 70px;
    background-color: brown;
    border-radius: 50%;
}

.t_box1 .t-element{
    display: flex;
    justify-content: center;
}
.centerIt{
    display: flex;
    align-items: center;
}

.translateY{
    animation: vertical 1s ease none infinite alternate;
}

.translateX{
    animation: horizontal 1s ease none infinite alternate;
}

.translateXY{
    animation: combined 2s ease none infinite alternate ;
}

.scaleY{
    animation: scaleVetical 2s ease none infinite ;
}
.scaleX{
    animation: scaleHorizontal 2s ease none infinite alternate;
}

.scaleXY{
    animation: scaleCombine 2s ease none infinite alternate;
}
.rotate{
    animation: rotate 2s ease none infinite;
}

.skewY{
    animation: skewVertical 2s ease none infinite alternate ;
}
.skewX{
    animation: skewHorizontal 2s ease none infinite alternate ;
}

@keyframes vertical {
    from{transform: translateY(100px);}
    to{transform: translateY(-19px);}
}

@keyframes horizontal {
    from{transform: translateX(130px);}
    to{transform: translateX(-10px);}
}
@keyframes combined {
    100%{transform: translate(70px,80px);}
}

@keyframes scaleVetical {
    from{ border-radius: 0;}
    to{transform: scaleY(2) translateX(75px); }
}

@keyframes scaleHorizontal {
    from{ border-radius: 0;}
    to{transform: scalex(2) translateX(45px); border-radius: 0; }
}

@keyframes scaleCombine {
    from{border-radius: 0;}
    to{transform:scale(2,2.5) translate(20px); background-color: #04AA6D; border-radius: 0; }
}

@keyframes rotate {
    0%{border-radius: 0;}
    50%{transform: translateX(75px)  ;}
    100%{ transform: rotate(-90deg); border-radius: 0;}
    
}

@keyframes skewVertical {
    from{ border-radius: 0;}
    to{transform: skewY(30deg) translateX(75px); border-radius: 0; }
}
@keyframes skewHorizontal {
    from{ border-radius: 0;}
    to{transform: skewX(30deg) translateX(75px); border-radius: 0; }
}

/* media query */
@media screen and (max-width: 768px) {
   .explain_transition, .explainAnimation, .animationProperty, .translate{
    grid-template-columns: 1fr
   }

   .twoProperty{
    flex-direction: column;
   }

   
}
